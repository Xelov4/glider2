#!/usr/bin/env python3
"""
Test des positions de clic de l'agent
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from modules.screen_capture import ScreenCapture

def test_click_positions():
    """Test et affiche les positions de clic pour chaque r√©gion"""
    
    print("=== TEST POSITIONS DE CLIC ===")
    
    screen_capture = ScreenCapture()
    
    # R√©gions critiques pour le poker
    critical_regions = [
        'new_hand_button',
        'action_buttons', 
        'resume_button',
        'hand_area',
        'community_cards'
    ]
    
    print("\nüéØ POSITIONS DE CLIC CALCUL√âES:")
    for region_name in critical_regions:
        if region_name in screen_capture.regions:
            region = screen_capture.regions[region_name]
            
            # Calculer le centre (position de clic)
            center_x = region.x + region.width // 2
            center_y = region.y + region.height // 2
            
            print(f"üìç {region_name}:")
            print(f"   R√©gion: ({region.x}, {region.y}, {region.width}, {region.height})")
            print(f"   Clic:   ({center_x}, {center_y})")
            print()
        else:
            print(f"‚ùå {region_name}: MANQUANT")
    
    # Test sp√©cifique pour new_hand_button
    print("=== TEST SP√âCIFIQUE NEW HAND BUTTON ===")
    if 'new_hand_button' in screen_capture.regions:
        region = screen_capture.regions['new_hand_button']
        center_x = region.x + region.width // 2
        center_y = region.y + region.height // 2
        
        print(f"R√©gion new_hand_button: ({region.x}, {region.y}, {region.width}, {region.height})")
        print(f"Position de clic calcul√©e: ({center_x}, {center_y})")
        print(f"Position de clic attendue: (1179, 206)")
        
        if center_x == 1179 and center_y == 206:
            print("‚úÖ Position de clic CORRECTE!")
        else:
            print("‚ùå Position de clic INCORRECTE!")
            print(f"Diff√©rence: ({center_x - 1179}, {center_y - 206})")

def test_region_capture():
    """Test de capture d'une r√©gion sp√©cifique"""
    
    print("\n=== TEST CAPTURE R√âGION ===")
    
    screen_capture = ScreenCapture()
    
    # Tester la capture de new_hand_button
    if 'new_hand_button' in screen_capture.regions:
        region = screen_capture.regions['new_hand_button']
        print(f"R√©gion new_hand_button: {region}")
        
        # Capturer la r√©gion
        captured = screen_capture.capture_region('new_hand_button')
        if captured is not None:
            print(f"‚úÖ Capture r√©ussie: {captured.shape}")
            
            # Sauvegarder l'image pour inspection
            import cv2
            cv2.imwrite('test_new_hand_button.png', captured)
            print("üíæ Image sauvegard√©e: test_new_hand_button.png")
        else:
            print("‚ùå √âchec de la capture")
    else:
        print("‚ùå R√©gion new_hand_button non trouv√©e")

if __name__ == "__main__":
    print("üîç Test des positions de clic...")
    
    test_click_positions()
    test_region_capture()
    
    print("\nüìã V√©rifiez l'image 'test_new_hand_button.png' pour voir ce qui est captur√©") 